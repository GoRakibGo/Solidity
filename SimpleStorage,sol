//SPDX-License-Identifier: MIT

pragma solidity ^0.8.7;

contract SimpleStorage {
    
    uint256 favouriteNumber; // Initialize at index 0
    bool favouriteBool; // Initialize at index 1
    
    struct People{
        uint256 favouriteNumber;
        string name;
    }
    
    //People public person = People({favouriteNumber: 100, name: "Rakib"});
    
    People[] public people; // Dynamic array
    mapping(string => uint256) public nametoFavouriteNumber;
    
    function store(uint256 _favouriteNumber) public {
        favouriteNumber = _favouriteNumber;
    }
    
    function retrive() public view returns(uint256) {
        return favouriteNumber;
    }
    
    function addPerson(string memory _name, uint256 _favouriteNumber) public {
        people.push(People(_favouriteNumber, _name));
        nametoFavouriteNumber[_name] = _favouriteNumber;
    }
}
